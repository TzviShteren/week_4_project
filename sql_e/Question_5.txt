כשאני מריץ EXPLAIN ANALYZE על השאילתה הראשונה יוצא:

Hash Join  (cost=40.25..65.50 rows=5 width=72) (actual time=53.689..53.698 rows=4 loops=1)
  Hash Cond: (((air_force_missions.country)::text = (air_force_missions_1.country)::text) AND (air_force_missions.mission_count = (max(air_force_missions_1.mission_count))))
  CTE air_force_missions
    ->  Function Scan on get_all_attacks_by_year  (cost=0.25..10.25 rows=1000 width=72) (actual time=53.620..53.621 rows=8 loops=1)
  ->  CTE Scan on air_force_missions  (cost=0.00..20.00 rows=1000 width=72) (actual time=53.625..53.627 rows=8 loops=1)
  ->  Hash  (cost=27.00..27.00 rows=200 width=40) (actual time=0.040..0.041 rows=4 loops=1)
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  HashAggregate  (cost=25.00..27.00 rows=200 width=40) (actual time=0.028..0.032 rows=5 loops=1)
              Group Key: air_force_missions_1.country
              Batches: 1  Memory Usage: 40kB
              ->  CTE Scan on air_force_missions air_force_missions_1  (cost=0.00..20.00 rows=1000 width=40) (actual time=0.002..0.009 rows=8 loops=1)
Planning Time: 0.236 ms
Execution Time: 53.837 ms

נראה שהכי טוב לעשות אינדוקס ל: extract(year from mission_date
כי אני משתמש בו הרבה ויש פה סוג של חילוץ

קוד:
CREATE INDEX idx_mission_year ON mission (extract(year from mission_date));

כשאני מריץ EXPLAIN ANALYZE על השאילתה הראשונה לאחר ינדוקס:
Hash Join  (cost=40.25..65.50 rows=5 width=72) (actual time=3.585..3.588 rows=4 loops=1)
  Hash Cond: (((air_force_missions.country)::text = (air_force_missions_1.country)::text) AND (air_force_missions.mission_count = (max(air_force_missions_1.mission_count))))
  CTE air_force_missions
    ->  Function Scan on get_all_attacks_by_year  (cost=0.25..10.25 rows=1000 width=72) (actual time=3.569..3.569 rows=8 loops=1)
  ->  CTE Scan on air_force_missions  (cost=0.00..20.00 rows=1000 width=72) (actual time=3.570..3.571 rows=8 loops=1)
  ->  Hash  (cost=27.00..27.00 rows=200 width=40) (actual time=0.008..0.008 rows=4 loops=1)
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  HashAggregate  (cost=25.00..27.00 rows=200 width=40) (actual time=0.005..0.006 rows=5 loops=1)
              Group Key: air_force_missions_1.country
              Batches: 1  Memory Usage: 40kB
              ->  CTE Scan on air_force_missions air_force_missions_1  (cost=0.00..20.00 rows=1000 width=40) (actual time=0.000..0.001 rows=8 loops=1)
Planning Time: 0.117 ms
Execution Time: 3.619 ms




---------------------------------------------------------------------------------
כשאני מריץ EXPLAIN ANALYZE על השאילתה השנייה יוצא:
Group  (cost=5959.71..5964.68 rows=48 width=43) (actual time=91.944..95.230 rows=21 loops=1)
"  Group Key: target_country, bomb_damage_assessment"
  ->  Gather Merge  (cost=5959.71..5964.48 rows=40 width=43) (actual time=91.939..95.221 rows=21 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Group  (cost=4959.69..4959.84 rows=20 width=43) (actual time=14.441..14.445 rows=7 loops=3)
"              Group Key: target_country, bomb_damage_assessment"
              ->  Sort  (cost=4959.69..4959.74 rows=20 width=43) (actual time=14.439..14.441 rows=11 loops=3)
"                    Sort Key: target_country, bomb_damage_assessment"
                    Sort Method: quicksort  Memory: 27kB
                    Worker 0:  Sort Method: quicksort  Memory: 25kB
                    Worker 1:  Sort Method: quicksort  Memory: 25kB
                    ->  Parallel Seq Scan on mission  (cost=0.00..4959.26 rows=20 width=43) (actual time=8.906..14.321 rows=11 loops=3)
                          Filter: ((bomb_damage_assessment IS NOT NULL) AND ((airborne_aircraft)::integer > 5))
                          Rows Removed by Filter: 59416
Planning Time: 0.211 ms
Execution Time: 95.271 ms
נראה שהכי טוב לעשות אינדוקס ל: airborne_aircraft
מכיוון שאני עושה חיפוש עליו

קוד:
CREATE INDEX idx_airborne_aircraft ON mission (airborne_aircraft);

כשאני מריץ EXPLAIN ANALYZE על השאילתה השנייה לאחר ינדוקס:
Group  (cost=5959.71..5964.68 rows=48 width=43) (actual time=51.862..56.049 rows=21 loops=1)
"  Group Key: target_country, bomb_damage_assessment"
  ->  Gather Merge  (cost=5959.71..5964.48 rows=40 width=43) (actual time=51.858..56.039 rows=21 loops=1)
        Workers Planned: 2
        Workers Launched: 2
        ->  Group  (cost=4959.69..4959.84 rows=20 width=43) (actual time=11.345..11.349 rows=7 loops=3)
"              Group Key: target_country, bomb_damage_assessment"
              ->  Sort  (cost=4959.69..4959.74 rows=20 width=43) (actual time=11.344..11.345 rows=11 loops=3)
"                    Sort Key: target_country, bomb_damage_assessment"
                    Sort Method: quicksort  Memory: 27kB
                    Worker 0:  Sort Method: quicksort  Memory: 25kB
                    Worker 1:  Sort Method: quicksort  Memory: 25kB
                    ->  Parallel Seq Scan on mission  (cost=0.00..4959.26 rows=20 width=43) (actual time=6.700..11.190 rows=11 loops=3)
                          Filter: ((bomb_damage_assessment IS NOT NULL) AND ((airborne_aircraft)::integer > 5))
                          Rows Removed by Filter: 59416
Planning Time: 0.176 ms
Execution Time: 56.094 ms

נראה שעדיין זה לא מועיל בהרבה אבל לפחות מועיל מעט

